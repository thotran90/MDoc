@using MDoc.Services.Contract.DataContracts
<div class="col-md-12">
    @(Html.Kendo().Grid<DocumentModel>()
          .Name("GridDocuments")
          .Columns(columns =>
          {
              columns.Bound(c => c.CustomerId).ClientTemplate("<div class='btn-group'>" +
                                                              "<a class='btn btn-info' href='" +
                                                              Url.Action("Detail", "Document", new { id = "#= DocumentId #" }) +
                                                              "' title='Review Document'><i class='fa fa-info'></i><a/>" +
                                                              "# if(DocumentStatusId == 1) {#" +
                                                              "<a class='btn btn-success' onclick='appDocument.updateStatus(this)' data-id='#: DocumentId #' data-status='2' title='Start Progress'><i class='fa fa-play'></i><a/>" +
                                                              "#}#" +
                                                              "# if(DocumentStatusId != 6) {#" +
                                                              "<a class='btn btn-primary' href='" +
                                                              Url.Action("Edit", "Document", new { id = "#= DocumentId #" }) +
                                                              "' title='Edit Document'><i class='fa fa-edit'></i><a/>" +
                                                              "#}#" +
                                                              "# if(DocumentStatusId == 2) {#" +
                                                              "<a class='btn btn-success' onclick='appDocument.updateStatus(this)' data-id='#: DocumentId #' data-status='4' title='Passed'><i class='fa fa-check'></i><a/>" +
                                                              "#}#" +
                                                              "# if(DocumentStatusId == 4) {#" +
                                                              "<a class='btn btn-success' onclick='appDocument.updateStatus(this)' data-id='#: DocumentId #' data-status='5' title='Payment'><i class='fa fa-dollar'></i><a/>" +
                                                              "#}#" +
                                                              "# if(DocumentStatusId == 5) {#" +
                                                              "<a class='btn btn-success' onclick='appDocument.updateStatus(this)' data-id='#: DocumentId #' data-status='6' title='Done'><i class='fa fa-check'></i><a/>" +
                                                              "#}#" +
                                                              "# if(DocumentStatusId == 1 || DocumentStatusId == 2) {#" +
                                                              "<a class='btn btn-danger' onclick='appDocument.updateStatus(this)' data-id='#: DocumentId #' data-status='3' title='Cancel Document'><i class='fa fa-remove'></i><a/>" +
                                                              "#}#" +
                                                              "</div>")
                  .Width(200)
                  .HeaderTemplate("Actions")
                  .Sortable(false)
                  .Filterable(false);
              columns.Bound(c => c.Code).Width(100);
              columns.Bound(c => c.Customer.FullName).HeaderTemplate("Customer");
              columns.Bound(c => c.DocumentType).HeaderTemplate("Type of Document").Width(150);
              columns.Bound(c => c.Country).Width(150);
              columns.Bound(c => c.IsNeedContract).HeaderTemplate("Need Contract?").ClientTemplate("# if(IsNeedContract == true) {#" +
                                                                                                   "<i class='fa fa-check blue'></i>" +
                                                                                                   "#}#").Width(150);
              columns.Bound(c => c.IsCreatedContract).HeaderTemplate("Created Contract?").ClientTemplate("# if(IsCreatedContract == true) {#" +
                                                                                                   "<i class='fa fa-check blue'></i>" +
                                                                                                   "#}#").Width(150);
              columns.Bound(c => c.FormatedResponsebileUsers).HeaderTemplate("Responsible Users");
              columns.Bound(c => c.CreatedDate).Format("{0: dd/MM/yyyy HH:mm}");
              columns.Bound(c => c.DocumentStatus).Width(150).HeaderTemplate("Status");
          })
          .ToolBar(toolbar =>
          {
              toolbar.Template(@<text>
        <div class="grid-toolbar">
            <a class="btn btn-primary" href="@Url.Action("Create")"><i class="fa fa-plus-circle"></i> Add new document</a>
        </div>
            </text>    );
          })
          .Scrollable()
          .Filterable()
          .Sortable()
          .Pageable(pageable => pageable
              .Refresh(true)
              .PageSizes(true)
              .ButtonCount(5))
          .DataSource(dataSource => dataSource
              .Ajax()
              .Read(read => read.Action("ListOfDocument", "Document"))
              .Model(model => model.Id(p => p.DocumentId))
              .PageSize(20)
              .Destroy(c => c.Action("Remove", "Customer"))
          )
    )
</div>
