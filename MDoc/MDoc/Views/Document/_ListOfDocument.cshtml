@using MDoc.Services.Contract.DataContracts
<div class="col-md-12">
    @(Html.Kendo().Grid<DocumentModel>()
          .Name("GridDocuments")
          .Columns(columns =>
          {
              columns.Bound(c => c.CustomerId).ClientTemplate(@Html.Partial("_Command").ToHtmlString())
                  .Width(200)
                  .HeaderTemplate("Actions")
                  .Sortable(false)
                  .Filterable(false);
              columns.Bound(c => c.Code).Width(100);
              columns.Bound(c => c.Customer.FullName).HeaderTemplate("Customer");
              columns.Bound(c => c.DocumentType).HeaderTemplate("Type of Document");
              columns.Bound(c => c.Country).Width(150); 
              columns.Bound(c => c.FormatedResponsebileUsers).HeaderTemplate("Responsible Users");
              columns.Bound(c => c.Creator).HeaderTemplate("Created By");
              columns.Bound(c => c.CreatedDate).Format("{0: dd/MM/yyyy HH:mm}");
              columns.Bound(c => c.DocumentStatus).Width(150).HeaderTemplate("Status");
          })
          .ToolBar(toolbar =>
          {
              toolbar.Template(@<text>
        <div class="grid-toolbar">
            <a class="btn btn-primary" href="@Url.Action("Create")"><i class="fa fa-plus-circle"></i> Add new document</a>
        </div>
            </text>    );
          })
          .Scrollable()
          .Filterable()
          .Sortable()
          .Pageable(pageable => pageable
              .Refresh(true)
              .PageSizes(true)
              .ButtonCount(5))
          .DataSource(dataSource => dataSource
              .Ajax()
              .Read(read => read.Action("ListOfDocument", "Document"))
              .Model(model => model.Id(p => p.DocumentId))
              .PageSize(20)
              .Destroy(c => c.Action("Remove", "Customer"))
          )
    )
</div>
