@model MDoc.Services.Contract.DataContracts.User.ChangePasswordModel
@{
    ViewBag.Title = "Update the account password";
}
@using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    if (!ViewData.ModelState.IsValid)
    {
        <div class="row">
            <div class="col-md-12 col-xs-12 col-sm-12">
                @Html.ValidationMessage("InvalidModel")
                @Html.ValidationMessage("InternalServerError")
            </div>
        </div>
    }
    <div class="row">
        <div class="col-md-3 col-sm-12 col-xs-12">
            @Html.LabelFor(m => m.OldPassword)
            @Html.ValidationMessageFor(m => m.OldPassword)
            @Html.ValidationMessage("InvalidCurrentPassword")
            @Html.PasswordFor(m => m.OldPassword, new {@class = "form-control"})
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 col-sm-12 col-xs-12">
            @Html.LabelFor(m => m.NewPassword)
            @Html.ValidationMessageFor(m => m.NewPassword)
            @Html.PasswordFor(m => m.NewPassword, new {@class = "form-control"})
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 col-sm-12 col-xs-12">
            @Html.LabelFor(m => m.ConfirmNewPassword)
            @Html.ValidationMessageFor(m => m.ConfirmNewPassword)
            @Html.PasswordFor(m => m.ConfirmNewPassword, new {@class = "form-control"})
        </div>
    </div>
    <div class="row row-margintop">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <a class="btn btn-default" href="@Url.Action("Index", "Home")"><i class="fa fa-backward"></i> Back</a>
            <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Save</button>
        </div>
    </div>
}

